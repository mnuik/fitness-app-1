{"ast":null,"code":"var _jsxFileName = \"/Users/miramuikku/Documents/Coding/ShortCut/sc-big-app/frontend/src/pages/Login/index.js\";\nimport React, { useState } from 'react';\nimport { Alert, Button, Form, FormGroup, Label, Input, Container } from 'reactstrap';\nimport api from '../../services/api';\n\nconst Login = ({\n  history\n}) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    console.log('result of the submit', email, password);\n    const response = await api.post('/login', {\n      email,\n      password\n    });\n    const userId = response.data._id || false;\n\n    try {\n      if (userId) {\n        localStorage.setItem('user', userId);\n        history.push('/dashboard');\n      } else {\n        const {\n          message\n        } = response.data;\n        setError(true);\n        setErrorMessage(message);\n        console.log(message);\n        setTimeout(() => {\n          setError(false);\n          setErrorMessage('');\n        }, 2000);\n      }\n    } catch (error) {\n      setError(true);\n      setErrorMessage(`Error, the server returned an error`);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \" Login: \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"Login to your account to see events\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"email\",\n    name: \"email\",\n    id: \"exampleEmail\",\n    placeholder: \"Enter your email\",\n    onChange: event => setEmail(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    name: \"password\",\n    id: \"examplePassword\",\n    placeholder: \"Enter a password\",\n    onChange: event => setPassword(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"submit-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, \"Login\")), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"secondary-btn\",\n    onClick: () => history.push('/register'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, \"Register\"))), error ? /*#__PURE__*/React.createElement(Alert, {\n    color: \"danger\",\n    className: \"event-validation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, errorMessage) : '');\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/miramuikku/Documents/Coding/ShortCut/sc-big-app/frontend/src/pages/Login/index.js"],"names":["React","useState","Alert","Button","Form","FormGroup","Label","Input","Container","api","Login","history","email","setEmail","password","setPassword","error","setError","errorMessage","setErrorMessage","handleSubmit","event","preventDefault","console","log","response","post","userId","data","_id","localStorage","setItem","push","message","setTimeout","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Alert, Button, Form, FormGroup, Label, Input, Container } from 'reactstrap'\n\nimport api from '../../services/api'\n\n\n\nconst Login = ({ history }) => {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [error, setError] = useState(false)\n    const [errorMessage, setErrorMessage] = useState('')\n\n    const handleSubmit = async event => {\n        event.preventDefault()\n        console.log('result of the submit', email, password)\n\n        const response = await api.post('/login', { email, password })\n        const userId = response.data._id || false\n        try {\n            if (userId) {\n                localStorage.setItem('user', userId)\n                history.push('/dashboard')\n            } else {\n                const { message } = response.data\n                setError(true)\n                setErrorMessage(message)\n                console.log(message)\n\n                setTimeout(() => {\n                    setError(false)\n                    setErrorMessage('')\n                }, 2000)\n            }\n        } catch (error) {\n            setError(true)\n            setErrorMessage(`Error, the server returned an error`)\n        }\n\n    }\n\n    return (\n        <Container>\n            <h2> Login: </h2>\n            <p>Login to your account to see events</p>\n            <Form onSubmit={handleSubmit}>\n                <FormGroup>\n                    <Input type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"Enter your email\" onChange={event => setEmail(event.target.value)} />\n                </FormGroup>\n                <FormGroup>\n                    <Input type=\"password\" name=\"password\" id=\"examplePassword\" placeholder=\"Enter a password\" onChange={event => setPassword(event.target.value)} />\n                </FormGroup>\n                <FormGroup>\n                    <Button className=\"submit-btn\">Login</Button>\n                </FormGroup>\n                <FormGroup>\n                    <Button className=\"secondary-btn\" onClick={() => history.push('/register')}>Register</Button>\n                </FormGroup>\n            </Form>\n            {error ? (\n                <Alert color=\"danger\" className=\"event-validation\">{errorMessage}</Alert>\n            ) : ''}\n        </Container>\n    )\n}\n\nexport default Login"]},"metadata":{},"sourceType":"module"}