{"ast":null,"code":"var _jsxFileName = \"/Users/miramuikku/Documents/Coding/ShortCut/sc-big-app/frontend/src/pages/EventsPage/index.js\";\nimport React, { useState, useMemo } from 'react';\nimport { Alert, Button, Form, FormGroup, Label, Input, Container } from 'reactstrap';\nimport thumbnailIcon from '../../assets/placeholder_thumbnail.png';\nimport './events.css';\nimport api from '../../services/api';\n\nconst EventsPage = ({\n  history\n}) => {\n  // console.log(user_id)\n  // Declare state variables:\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [category, setCategory] = useState('');\n  const [price, setPrice] = useState('');\n  const [thumbnail, setThumbnail] = useState(null);\n  const [date, setDate] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [success, setSuccess] = useState(false);\n  const preview = useMemo(() => {\n    return thumbnail ? URL.createObjectURL(thumbnail) : null;\n  }, [thumbnail]);\n\n  const submitHandler = async event => {\n    event.preventDefault();\n    const user_id = localStorage.getItem('user');\n    const eventData = new FormData();\n    eventData.append(\"thumbnail\", thumbnail);\n    eventData.append(\"title\", title);\n    eventData.append(\"category\", category);\n    eventData.append(\"description\", description);\n    eventData.append(\"price\", price);\n    eventData.append(\"date\", date);\n\n    try {\n      if (title !== '' && description !== '' && category !== '' && date !== '' && price !== '' && thumbnail !== null) {\n        console.log('Event has been sent');\n        await api.post('/event', eventData, {\n          headers: {\n            user_id\n          }\n        });\n        console.log(eventData);\n        console.log(\"Event has been saved\");\n        setSuccess(true);\n        setTimeout(() => {\n          setSuccess(false);\n        }, 2000);\n      } else {\n        setErrorMessage(true);\n        setTimeout(() => {\n          setErrorMessage(false);\n        }, 2000);\n        console.log(\"Missing required data\");\n      }\n    } catch (error) {\n      Promise.reject(error);\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, \"Create your Event\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, \" Upload Image: \"), /*#__PURE__*/React.createElement(Label, {\n    id: \"thumbnail\",\n    style: {\n      backgroundImage: `url(${preview})`\n    },\n    className: thumbnail ? 'has-thumbnail' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"file\",\n    onChange: event => setThumbnail(event.target.files[0]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: thumbnailIcon,\n    alt: \"Upload Icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, \" Title: \"), /*#__PURE__*/React.createElement(Input, {\n    id: \"title\",\n    type: \"text\",\n    placeholder: 'Set Event Title',\n    onChange: event => setTitle(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, \" Category: \"), /*#__PURE__*/React.createElement(Input, {\n    id: \"category\",\n    type: \"text\",\n    placeholder: 'Set Event Category',\n    onChange: event => setCategory(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, \" Description: \"), /*#__PURE__*/React.createElement(Input, {\n    id: \"description\",\n    type: \"text\",\n    placeholder: 'Set Event Description',\n    onChange: event => setDescription(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, \" Price: \"), /*#__PURE__*/React.createElement(Input, {\n    id: \"price\",\n    type: \"text\",\n    placeholder: 'Set Event Price',\n    onChange: event => setPrice(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, \" Date: \"), /*#__PURE__*/React.createElement(Input, {\n    id: \"date\",\n    type: \"date\",\n    placeholder: 'Set Event Date',\n    onChange: event => setDate(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: \"submit-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, \"Create Event\")), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: \"secondary-btn\",\n    onClick: () => history.push('/dashboard'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, \"Dashboard\"))), errorMessage ? /*#__PURE__*/React.createElement(Alert, {\n    color: \"danger\",\n    className: \"event-validation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, \"Missing input\") : '', success ? /*#__PURE__*/React.createElement(Alert, {\n    color: \"success\",\n    className: \"event-validation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, \"Event created successfully\") : '');\n};\n\nexport default EventsPage;","map":{"version":3,"sources":["/Users/miramuikku/Documents/Coding/ShortCut/sc-big-app/frontend/src/pages/EventsPage/index.js"],"names":["React","useState","useMemo","Alert","Button","Form","FormGroup","Label","Input","Container","thumbnailIcon","api","EventsPage","history","title","setTitle","description","setDescription","category","setCategory","price","setPrice","thumbnail","setThumbnail","date","setDate","errorMessage","setErrorMessage","success","setSuccess","preview","URL","createObjectURL","submitHandler","event","preventDefault","user_id","localStorage","getItem","eventData","FormData","append","console","log","post","headers","setTimeout","error","Promise","reject","backgroundImage","target","files","value","push"],"mappings":"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","sourcesContent":["import React, { useState, useMemo } from 'react'\nimport { Alert, Button, Form, FormGroup, Label, Input, Container } from 'reactstrap'\n\nimport thumbnailIcon from '../../assets/placeholder_thumbnail.png'\n\nimport './events.css'\nimport api from '../../services/api'\n\nconst EventsPage = ({ history }) => {\n    // console.log(user_id)\n\n    // Declare state variables:\n    const [title, setTitle] = useState('')\n    const [description, setDescription] = useState('')\n    const [category, setCategory] = useState('')\n    const [price, setPrice] = useState('')\n    const [thumbnail, setThumbnail] = useState(null)\n    const [date, setDate] = useState('')\n    const [errorMessage, setErrorMessage] = useState('')\n    const [success, setSuccess] = useState(false)\n\n    const preview = useMemo(() => {\n        return thumbnail ? URL.createObjectURL(thumbnail) : null\n    }, [thumbnail])\n\n    const submitHandler = async (event) => {\n        event.preventDefault()\n        const user_id = localStorage.getItem('user')\n        const eventData = new FormData()\n\n        eventData.append(\"thumbnail\", thumbnail)\n        eventData.append(\"title\", title)\n        eventData.append(\"category\", category)\n        eventData.append(\"description\", description)\n        eventData.append(\"price\", price)\n        eventData.append(\"date\", date)\n\n        try {\n            if (title !== '' &&\n                description !== '' &&\n                category !== '' &&\n                date !== '' &&\n                price !== '' &&\n                thumbnail !== null) {\n\n                console.log('Event has been sent')\n                await api.post('/event', eventData, { headers: { user_id } })\n                console.log(eventData)\n                console.log(\"Event has been saved\")\n                setSuccess(true)\n\n                setTimeout(() => {\n                    setSuccess(false)\n                }, 2000);\n\n            } else {\n                setErrorMessage(true)\n                setTimeout(() => {\n                    setErrorMessage(false)\n                }, 2000)\n\n                console.log(\"Missing required data\")\n            }\n\n        } catch (error) {\n            Promise.reject(error)\n            console.log(error)\n\n        }\n    }\n\n    return (\n        <Container>\n            <h1>Create your Event</h1>\n            <Form onSubmit = {submitHandler}>\n                <FormGroup>\n                    <Label> Upload Image: </Label>\n                    <Label id=\"thumbnail\" style={{backgroundImage:`url(${preview})`}} className= {thumbnail ? 'has-thumbnail' : ''}>\n                        <Input type=\"file\" onChange={event => setThumbnail(event.target.files[0])} />\n                        <img src={ thumbnailIcon } alt='Upload Icon' />\n                    </Label>\n                </FormGroup>\n                <FormGroup>\n                    <Label> Title: </Label>\n                    <Input id=\"title\" type=\"text\" placeholder={'Set Event Title'} onChange={event => setTitle(event.target.value)} />\n                </FormGroup>\n                <FormGroup>\n                    <Label> Category: </Label>\n                    <Input id=\"category\" type=\"text\" placeholder={'Set Event Category'} onChange={event => setCategory(event.target.value)} />\n                </FormGroup>\n                <FormGroup>\n                    <Label> Description: </Label>\n                    <Input id=\"description\" type=\"text\" placeholder={'Set Event Description'} onChange={event => setDescription(event.target.value)} />\n                </FormGroup>\n                <FormGroup>\n                    <Label> Price: </Label>\n                    <Input id=\"price\" type=\"text\" placeholder={'Set Event Price'} onChange={event => setPrice(event.target.value)} />\n                </FormGroup>\n                <FormGroup>\n                    <Label> Date: </Label>\n                    <Input id=\"date\" type=\"date\" placeholder={'Set Event Date'} onChange={event => setDate(event.target.value)} />\n                </FormGroup>\n                <FormGroup>\n                    <Button type=\"submit\" className=\"submit-btn\">\n                        Create Event\n                    </Button>\n                </FormGroup>\n                <FormGroup>\n                    <Button type=\"submit\" className=\"secondary-btn\" onClick={()=>history.push('/dashboard')}>\n                        Dashboard\n                    </Button>\n                </FormGroup>\n            </Form>\n            {errorMessage ? (\n                <Alert color=\"danger\" className=\"event-validation\">Missing input</Alert>\n            ) : ''}\n            {success ? (\n                <Alert color=\"success\" className=\"event-validation\">Event created successfully</Alert>\n            ) : ''}\n        </Container>\n    )\n}\n\nexport default EventsPage"]},"metadata":{},"sourceType":"module"}