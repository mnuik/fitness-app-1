{"ast":null,"code":"var _jsxFileName = \"/Users/miramuikku/Documents/Coding/ShortCut/sc-big-app/frontend/src/pages/Register/index.js\";\nimport React, { useState } from 'react';\nimport { Alert, Button, Form, FormGroup, Label, Input, Container } from 'reactstrap';\nimport api from '../../services/api';\n\nconst Register = ({\n  history\n}) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [error, setError] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      if (email !== '' && password !== '' && firstName !== '' && lastName !== '') {\n        const response = await api.post('/user/register', {\n          email,\n          password,\n          firstName,\n          lastName\n        });\n        const userId = response.data._id || false;\n\n        if (userId) {\n          localStorage.setItem('user', userId);\n          history.push('/dashboard');\n        } else {\n          const {\n            message\n          } = response.data;\n          console.log(message);\n          setError(true);\n          setErrorMessage(errorMessage);\n          setTimeout(() => {\n            setError(false);\n            setErrorMessage('');\n          }, 2000);\n        }\n      } else {\n        setError(true);\n        setErrorMessage(\"Inputs missing\");\n        setTimeout(() => {\n          setError(false);\n          setErrorMessage('');\n        }, 2000);\n      }\n    } catch (error) {\n      Promise.reject(error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \" Register: \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \" Please \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 20\n    }\n  }, \"register\"), \" for a new account\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"firstname\",\n    id: \"firstName\",\n    placeholder: \"First name\",\n    onChange: event => setFirstName(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"lastname\",\n    id: \"lastName\",\n    placeholder: \"Last name\",\n    onChange: event => setLastName(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"email\",\n    name: \"email\",\n    id: \"exampleEmail\",\n    placeholder: \"Email\",\n    onChange: event => setEmail(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    name: \"password\",\n    id: \"examplePassword\",\n    placeholder: \"Password\",\n    onChange: event => setPassword(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"submit-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, \"Register\")), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"secondary-btn\",\n    onClick: () => history.push('/login'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, \"Login instead?\"))), errorMessage ? /*#__PURE__*/React.createElement(Alert, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"Missing required information\") : '');\n};\n\nexport default Register;","map":{"version":3,"sources":["/Users/miramuikku/Documents/Coding/ShortCut/sc-big-app/frontend/src/pages/Register/index.js"],"names":["React","useState","Alert","Button","Form","FormGroup","Label","Input","Container","api","Register","history","email","setEmail","password","setPassword","firstName","setFirstName","lastName","setLastName","error","setError","errorMessage","setErrorMessage","handleSubmit","event","preventDefault","response","post","userId","data","_id","localStorage","setItem","push","message","console","log","setTimeout","Promise","reject","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Alert, Button, Form, FormGroup, Label, Input, Container } from 'reactstrap'\n\nimport api from '../../services/api'\n\nconst Register = ({ history }) => {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [firstName, setFirstName] = useState('')\n    const [lastName, setLastName] = useState('')\n    const [error, setError] = useState('')\n    const [errorMessage, setErrorMessage] = useState('')\n\n    const handleSubmit = async event => {\n        event.preventDefault()\ntry {\n            if ( email !== '' &&\n            password !== '' &&\n            firstName !== '' &&\n            lastName !== ''\n            ) {\n                const response = await api.post('/user/register', {email, password, firstName, lastName})\n                const userId = response.data._id || false\n    \n            if (userId) {\n                localStorage.setItem('user', userId)\n                history.push('/dashboard')\n            } else {\n                const { message } = response.data\n                console.log(message)\n                setError(true)\n                setErrorMessage(errorMessage)\n\n                setTimeout(() => {\n                    setError(false)\n                    setErrorMessage('')\n                }, 2000);\n            }\n            } else {\n                setError(true)\n                setErrorMessage(\"Inputs missing\")\n    \n                setTimeout(() => {\n                    setError(false)\n setErrorMessage('')\n                }, 2000);\n            }\n        } catch(error) {\n            Promise.reject(error)\n        }\n    }\n\nreturn (\n    <Container>\n        <h2> Register: </h2>\n        <p> Please <strong>register</strong> for a new account</p>\n        <Form onSubmit={handleSubmit}>\n            <FormGroup>\n                <Input type=\"text\" name=\"firstname\" id=\"firstName\" placeholder=\"First name\" onChange={event => setFirstName(event.target.value)} />\n            </FormGroup>\n            <FormGroup>\n                <Input type=\"text\" name=\"lastname\" id=\"lastName\" placeholder=\"Last name\" onChange={event => setLastName(event.target.value)} />\n            </FormGroup>\n            <FormGroup>\n                <Input type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"Email\" onChange={event => setEmail(event.target.value)} />\n            </FormGroup>\n            <FormGroup>\n                <Input type=\"password\" name=\"password\" id=\"examplePassword\" placeholder=\"Password\" onChange={event => setPassword(event.target.value)} />\n            </FormGroup>\n            <FormGroup>\n                <Button className=\"submit-btn\">Register</Button>\n            </FormGroup>\n            <FormGroup>\n                <Button className=\"secondary-btn\" onClick={() => history.push('/login')}>Login instead?</Button>\n            </FormGroup>\n        </Form>\n\n        {errorMessage ? (\n            <Alert>\n                Missing required information\n            </Alert>\n        ) : ''}\n    </Container>\n)\n        }\nexport default Register"]},"metadata":{},"sourceType":"module"}