{"ast":null,"code":"var _jsxFileName = \"/Users/miramuikku/Documents/Coding/ShortCut/sc-big-app/frontend/src/pages/EventsPage/index.js\";\nimport React, { useState, useMemo } from 'react';\nimport { Alert, Button, Form, FormGroup, Label, Input, Container } from 'reactstrap';\nimport thumbnailIcon from '../../assets/placeholder_thumbnail.png';\nimport './events.css';\nimport api from '../../services/api';\n\nconst EventsPage = () => {\n  // console.log(user_id)\n  // Declare state variables:\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [category, setCategory] = useState('');\n  const [price, setPrice] = useState('');\n  const [thumbnail, setThumbnail] = useState(null);\n  const [date, setDate] = useState('');\n  const [errorMessage, setErrormessage] = useState('');\n  const [success, setSuccess] = useState('');\n  const preview = useMemo(() => {\n    return thumbnail ? URL.createObjectURL(thumbnail) : null;\n  }, [thumbnail]);\n\n  const submitHandler = async event => {\n    event.preventDefault();\n    const user_id = localStorage.getItem('user');\n    const eventData = new FormData();\n    eventData.append(\"thumbnail\", thumbnail);\n    eventData.append(\"title\", title);\n    eventData.append(\"category\", category);\n    eventData.append(\"description\", description);\n    eventData.append(\"price\", price);\n    eventData.append(\"date\", date);\n\n    try {\n      if (title !== '' && description !== '' && category !== '' && date !== '' && price !== '' && thumbnail !== null) {\n        console.log('Event has been sent');\n        await api.post('/event', eventData, {\n          headers: [user_id]\n        });\n        console.log(eventData);\n        console.log('Event has been saved');\n        setSuccess(true);\n        setTimeout(() => {\n          setSuccess(false);\n        }, 2000);\n      } else {\n        setErrormessage(true);\n        setTimeout(() => {\n          setErrormessage(false);\n        }, 2000);\n      }\n    } catch (error) {\n      Promise.reject(error);\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, \"Create your event\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }, \" Upload Image: \"), /*#__PURE__*/React.createElement(Label, {\n    id: \"thumbnail\",\n    style: {\n      backgroundImage: `url(${preview})`\n    },\n    className: thumbnail ? 'has-thumbnail' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"file\",\n    onChange: event => setThumbnail(event.target.files[0]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: thumbnailIcon,\n    alt: \"Upload Icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }, \" Title: \"), /*#__PURE__*/React.createElement(Input, {\n    id: \"title\",\n    type: \"text\",\n    placeholder: 'Set Event Title',\n    onChange: event => setTitle(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }, \" Category: \"), /*#__PURE__*/React.createElement(Input, {\n    id: \"category\",\n    type: \"text\",\n    placeholder: 'Set Event Category',\n    onChange: event => setCategory(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }, \" Description: \"), /*#__PURE__*/React.createElement(Input, {\n    id: \"description\",\n    type: \"text\",\n    placeholder: 'Set Event Description',\n    onChange: event => setDescription(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, \" Price: \"), /*#__PURE__*/React.createElement(Input, {\n    id: \"price\",\n    type: \"text\",\n    placeholder: 'Set Event Price',\n    onChange: event => setPrice(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }, \" Date: \"), /*#__PURE__*/React.createElement(Input, {\n    id: \"date\",\n    type: \"date\",\n    placeholder: 'Set Event Date',\n    onChange: event => setDate(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: \"submit-btn\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, \"Create Event\"), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"submit-btn\",\n    type: \"submit\",\n    onClick: () => history.push('/dashboard'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, \"Dashboard\"))), errorMessage ? /*#__PURE__*/React.createElement(Alert, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, \"Missing required information\") : '');\n};\n\nexport default EventsPage;","map":{"version":3,"sources":["/Users/miramuikku/Documents/Coding/ShortCut/sc-big-app/frontend/src/pages/EventsPage/index.js"],"names":["React","useState","useMemo","Alert","Button","Form","FormGroup","Label","Input","Container","thumbnailIcon","api","EventsPage","title","setTitle","description","setDescription","category","setCategory","price","setPrice","thumbnail","setThumbnail","date","setDate","errorMessage","setErrormessage","success","setSuccess","preview","URL","createObjectURL","submitHandler","event","preventDefault","user_id","localStorage","getItem","eventData","FormData","append","console","log","post","headers","setTimeout","error","Promise","reject","backgroundImage","target","files","value","history","push"],"mappings":"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","sourcesContent":["import React, { useState, useMemo } from 'react'\nimport { Alert, Button, Form, FormGroup, Label, Input, Container } from 'reactstrap'\n\nimport thumbnailIcon from '../../assets/placeholder_thumbnail.png'\n\nimport './events.css'\nimport api from '../../services/api'\n\nconst EventsPage = () => {\n    // console.log(user_id)\n\n    // Declare state variables:\n    const [title, setTitle] = useState('')\n    const [description, setDescription] = useState('')\n    const [category, setCategory] = useState('')\n    const [price, setPrice] = useState('')\n    const [thumbnail, setThumbnail] = useState(null)\n    const [date, setDate] = useState('')\n    const [errorMessage, setErrormessage] = useState('')\n    const [success, setSuccess] = useState('')\n\n    const preview = useMemo(() => {\n        return thumbnail ? URL.createObjectURL(thumbnail) : null\n    }, [thumbnail])\n\n    const submitHandler = async (event) => {\n        event.preventDefault()\n        const user_id = localStorage.getItem('user')\n        const eventData = new FormData()\n\n        eventData.append(\"thumbnail\", thumbnail)\n        eventData.append(\"title\", title)\n        eventData.append(\"category\", category)\n        eventData.append(\"description\", description)\n        eventData.append(\"price\", price)\n        eventData.append(\"date\", date)\n\n        try {\n            if (title !== '' &&\n                description !== '' &&\n                category !== '' &&\n                date !== '' &&\n                price !== '' &&\n                thumbnail !== null) {\n                console.log('Event has been sent')\n                await api.post('/event', eventData, { headers: [user_id] })\n                console.log(eventData)\n                console.log('Event has been saved')\n                setSuccess(true)\n                setTimeout(() => {\n                    setSuccess(false)\n                }, 2000)\n            } else {\n                setErrormessage(true)\n                setTimeout(() => {\n                    setErrormessage(false)\n                }, 2000)\n            }\n        } catch (error) {\n            Promise.reject(error)\n            console.log(error)\n\n        }}\n\n        return (\n            <Container>\n                <h2>Create your event</h2>\n                <Form onSubmit={submitHandler}>\n                    <FormGroup>\n                        <Label> Upload Image: </Label>\n                        <Label id=\"thumbnail\" style={{ backgroundImage: `url(${preview})` }} className={thumbnail ? 'has-thumbnail' : ''}>\n                            <Input type=\"file\" onChange={event => setThumbnail(event.target.files[0])} />\n                            <img src={thumbnailIcon} alt='Upload Icon' />\n                        </Label>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label> Title: </Label>\n                        <Input id=\"title\" type=\"text\" placeholder={'Set Event Title'} onChange={event => setTitle(event.target.value)} />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label> Category: </Label>\n                        <Input id=\"category\" type=\"text\" placeholder={'Set Event Category'} onChange={event => setCategory(event.target.value)} />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label> Description: </Label>\n                        <Input id=\"description\" type=\"text\" placeholder={'Set Event Description'} onChange={event => setDescription(event.target.value)} />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label> Price: </Label>\n                        <Input id=\"price\" type=\"text\" placeholder={'Set Event Price'} onChange={event => setPrice(event.target.value)} />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label> Date: </Label>\n                        <Input id=\"date\" type=\"date\" placeholder={'Set Event Date'} onChange={event => setDate(event.target.value)} />\n                    </FormGroup>\n                    <Button className=\"submit-btn\" type=\"submit\">\n                        Create Event\n                </Button>\n                <FormGroup>\n                <Button className=\"submit-btn\" type=\"submit\" onClick={() => history.push('/dashboard')}>\n                        Dashboard\n                </Button>\n                </FormGroup>\n                </Form>\n                {errorMessage ? (\n                    <Alert>\n                        Missing required information\n                    </Alert>\n                ) : ''}\n            </Container>\n        )\n    }\n\nexport default EventsPage"]},"metadata":{},"sourceType":"module"}